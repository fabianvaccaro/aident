//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AiGumsPC.srvweb {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srvweb.INegocioService")]
    public interface INegocioService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/DoWork", ReplyAction="http://tempuri.org/INegocioService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/DoWork", ReplyAction="http://tempuri.org/INegocioService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/tipoTestFoodToList", ReplyAction="http://tempuri.org/INegocioService/tipoTestFoodToListResponse")]
        MainCore.N_TipoTestFood[] tipoTestFoodToList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/tipoTestFoodToList", ReplyAction="http://tempuri.org/INegocioService/tipoTestFoodToListResponse")]
        System.Threading.Tasks.Task<MainCore.N_TipoTestFood[]> tipoTestFoodToListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/AddTipoTestFood", ReplyAction="http://tempuri.org/INegocioService/AddTipoTestFoodResponse")]
        bool AddTipoTestFood(MainCore.N_TipoTestFood tff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/AddTipoTestFood", ReplyAction="http://tempuri.org/INegocioService/AddTipoTestFoodResponse")]
        System.Threading.Tasks.Task<bool> AddTipoTestFoodAsync(MainCore.N_TipoTestFood tff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/AddTestFood", ReplyAction="http://tempuri.org/INegocioService/AddTestFoodResponse")]
        bool AddTestFood(LibreriaObjetos.N_TestFood tf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/AddTestFood", ReplyAction="http://tempuri.org/INegocioService/AddTestFoodResponse")]
        System.Threading.Tasks.Task<bool> AddTestFoodAsync(LibreriaObjetos.N_TestFood tf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/testFoodToList", ReplyAction="http://tempuri.org/INegocioService/testFoodToListResponse")]
        LibreriaObjetos.N_TestFood[] testFoodToList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/testFoodToList", ReplyAction="http://tempuri.org/INegocioService/testFoodToListResponse")]
        System.Threading.Tasks.Task<LibreriaObjetos.N_TestFood[]> testFoodToListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/DeleteTestFood", ReplyAction="http://tempuri.org/INegocioService/DeleteTestFoodResponse")]
        bool DeleteTestFood(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/DeleteTestFood", ReplyAction="http://tempuri.org/INegocioService/DeleteTestFoodResponse")]
        System.Threading.Tasks.Task<bool> DeleteTestFoodAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/validaMPAT", ReplyAction="http://tempuri.org/INegocioService/validaMPATResponse")]
        void validaMPAT(string nombre, string procedimiento, int idTestFood, int ciclosMasticatorios, int ciclosValidacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/validaMPAT", ReplyAction="http://tempuri.org/INegocioService/validaMPATResponse")]
        System.Threading.Tasks.Task validaMPATAsync(string nombre, string procedimiento, int idTestFood, int ciclosMasticatorios, int ciclosValidacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/validaExperimento", ReplyAction="http://tempuri.org/INegocioService/validaExperimentoResponse")]
        void validaExperimento(string codigoExperimento, int idMpat, int numeroPacientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/validaExperimento", ReplyAction="http://tempuri.org/INegocioService/validaExperimentoResponse")]
        System.Threading.Tasks.Task validaExperimentoAsync(string codigoExperimento, int idMpat, int numeroPacientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/mpatToList", ReplyAction="http://tempuri.org/INegocioService/mpatToListResponse")]
        LibreriaObjetos.N_Mpat[] mpatToList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INegocioService/mpatToList", ReplyAction="http://tempuri.org/INegocioService/mpatToListResponse")]
        System.Threading.Tasks.Task<LibreriaObjetos.N_Mpat[]> mpatToListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INegocioServiceChannel : AiGumsPC.srvweb.INegocioService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NegocioServiceClient : System.ServiceModel.ClientBase<AiGumsPC.srvweb.INegocioService>, AiGumsPC.srvweb.INegocioService {
        
        public NegocioServiceClient() {
        }
        
        public NegocioServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NegocioServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NegocioServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NegocioServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public MainCore.N_TipoTestFood[] tipoTestFoodToList() {
            return base.Channel.tipoTestFoodToList();
        }
        
        public System.Threading.Tasks.Task<MainCore.N_TipoTestFood[]> tipoTestFoodToListAsync() {
            return base.Channel.tipoTestFoodToListAsync();
        }
        
        public bool AddTipoTestFood(MainCore.N_TipoTestFood tff) {
            return base.Channel.AddTipoTestFood(tff);
        }
        
        public System.Threading.Tasks.Task<bool> AddTipoTestFoodAsync(MainCore.N_TipoTestFood tff) {
            return base.Channel.AddTipoTestFoodAsync(tff);
        }
        
        public bool AddTestFood(LibreriaObjetos.N_TestFood tf) {
            return base.Channel.AddTestFood(tf);
        }
        
        public System.Threading.Tasks.Task<bool> AddTestFoodAsync(LibreriaObjetos.N_TestFood tf) {
            return base.Channel.AddTestFoodAsync(tf);
        }
        
        public LibreriaObjetos.N_TestFood[] testFoodToList() {
            return base.Channel.testFoodToList();
        }
        
        public System.Threading.Tasks.Task<LibreriaObjetos.N_TestFood[]> testFoodToListAsync() {
            return base.Channel.testFoodToListAsync();
        }
        
        public bool DeleteTestFood(int id) {
            return base.Channel.DeleteTestFood(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTestFoodAsync(int id) {
            return base.Channel.DeleteTestFoodAsync(id);
        }
        
        public void validaMPAT(string nombre, string procedimiento, int idTestFood, int ciclosMasticatorios, int ciclosValidacion) {
            base.Channel.validaMPAT(nombre, procedimiento, idTestFood, ciclosMasticatorios, ciclosValidacion);
        }
        
        public System.Threading.Tasks.Task validaMPATAsync(string nombre, string procedimiento, int idTestFood, int ciclosMasticatorios, int ciclosValidacion) {
            return base.Channel.validaMPATAsync(nombre, procedimiento, idTestFood, ciclosMasticatorios, ciclosValidacion);
        }
        
        public void validaExperimento(string codigoExperimento, int idMpat, int numeroPacientes) {
            base.Channel.validaExperimento(codigoExperimento, idMpat, numeroPacientes);
        }
        
        public System.Threading.Tasks.Task validaExperimentoAsync(string codigoExperimento, int idMpat, int numeroPacientes) {
            return base.Channel.validaExperimentoAsync(codigoExperimento, idMpat, numeroPacientes);
        }
        
        public LibreriaObjetos.N_Mpat[] mpatToList() {
            return base.Channel.mpatToList();
        }
        
        public System.Threading.Tasks.Task<LibreriaObjetos.N_Mpat[]> mpatToListAsync() {
            return base.Channel.mpatToListAsync();
        }
    }
}
